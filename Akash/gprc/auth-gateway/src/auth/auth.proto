syntax = "proto3";


package auth;

service AuthService {
  rpc SignupService(SignupRequestDto) returns (SignupResponseDto) {}
  rpc LoginService(LoginRequestDto) returns (LoginResponseDto) {}
  rpc VerifyJWTAuthToken(VerifyJWTAuthTokenRequest) returns (VerifyJWTAuthTokenResponse) {}
  rpc RefreshJWTAuthToken(VerifyJWTAuthTokenRequest)returns (RefreshJWTAuthTokenResponse) {}
  rpc ResetPasswordService(ResetPasswordRequestDto) returns (ResetPasswordResponseDto) {}
  rpc LogoutService(VerifyJWTAuthTokenRequest) returns (LogoutResponseDto) {}
  rpc ForgotPasswordService(ForgotPasswordRequestDto) returns (ForgotPasswordResponseDto) {}
  rpc CanRoleAccessService(CanRoleAccessServiceRequest) returns (SignupResponseDto){}
}

// signup

message SignupRequestDto {
  string username = 1;
  string password = 2;
  string email = 3;
  optional string phone_number = 4;
}

message SignupResponseDto {
  bool success = 1;
  optional string message = 2;
}

// Login

enum Project {
  PNSS = 0;
  PWPS = 1;
}

message PNSSLoginRequestDto {
  Project project = 1;
  string barcode = 2;
  string first_name = 3;
  string last_name = 4;
  string dob = 5;
}

message PWPSLoginRequestDto {
  Project project = 1;
  string username = 2;
  string password = 3;
}

message LoginRequestDto {
  oneof login_request {
    PNSSLoginRequestDto pnss_login_request = 1;
    PWPSLoginRequestDto pwps_login_request = 2;
  }
}

message LoginResponseDto {
  string token = 1;
  // in PWPS add hashed ID and use instead of username
}

// Jwt

message VerifyJWTAuthTokenRequest {
  string token = 1;
}

message VerifyJWTAuthTokenResponse {
  Project project = 1;
  string unique_id = 2;
  string display_name = 3;
  repeated string role = 4;
  repeated string permissions = 5;
  map<string, string> app_specific = 6;
}

message RefreshJWTAuthTokenResponse {
  string token = 1;
}


message PNSSAuthServiceResponseDto {
  int32 sample_id = 1;
  int32 customer_id = 2;
  int32 patient_id = 3;
  repeated string role = 4;
  repeated string permissions = 5;
}


// Reset Password

message ResetPasswordRequestDto {
  string username = 1;
  string oldPassword = 2;
  string newPassword = 3;
}

message ResetPasswordResponseDto {
  bool success = 1;
  optional string message = 2;
}

// Logout 

message LogoutResponseDto {
  bool logout = 1;
}

//Forgot Password

message ForgotPasswordRequestDto {
  string username = 1;
  bool resetViaSms = 2;
  bool resetViaEmail = 3;
  optional string email = 4;
  optional string phoneNumber = 5;
}

message ForgotPasswordResponseDto {
  bool success = 1;
  optional string message = 2;
}

// Role Access

message CanRoleAccessServiceRequest {
  string path = 1;
  VerifyJWTAuthTokenResponse payload = 2;
}
