"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const gcp_version_1 = require("./gcp-version");
const versionPath = "versions/dev/Darwin/0.0.315/bit-0.0.315.tar.gz";
describe("Google Cloud Storage Versions List", () => {
    describe("version", () => {
        it("should return bit version from Class", () => __awaiter(void 0, void 0, void 0, function* () {
            const version = new gcp_version_1.GcpVersion(versionPath, "bvm.bit.dev", "https");
            expect(version.version).toBe("0.0.315");
        }));
        it("should return bit version from Object", () => __awaiter(void 0, void 0, void 0, function* () {
            const version = new gcp_version_1.GcpVersion(versionPath, "bvm.bit.dev", "https");
            expect(version.toObject().version).toBe("0.0.315");
        }));
    });
    describe("download url", () => {
        it("should return download url from Class", () => __awaiter(void 0, void 0, void 0, function* () {
            const version = new gcp_version_1.GcpVersion(versionPath, "bvm.bit.dev", "https");
            expect(version.url).toBe("https://bvm.bit.dev/versions/dev/Darwin/0.0.315/bit-0.0.315.tar.gz");
        }));
        it("should return download url from Object", () => __awaiter(void 0, void 0, void 0, function* () {
            const version = new gcp_version_1.GcpVersion(versionPath, "bvm.bit.dev", "https");
            expect(version.toObject().url).toBe("https://bvm.bit.dev/versions/dev/Darwin/0.0.315/bit-0.0.315.tar.gz");
        }));
    });
});
//# sourceMappingURL=gcp-version.spec.js.map